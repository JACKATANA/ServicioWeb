  version: '3.9'

  secrets:
    db_user_passwd:
      file: ./db_user_passwd
    database_url:
      file: ./database_url
    cfgsycapi_secret_key:
      file: ./cfgsycapi_secret_key

  services:
    postgres-db:
      image: postgres:16
      container_name: config_db
      restart: always
      deploy:
        replicas: 1
      environment:
        POSTGRES_DB: ${DB_NAME}
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD_FILE: /run/secrets/db_user_passwd
      ports:
      - "${DB_PORT}:5432"  
      volumes:
        - postgres_data:/var/lib/postgresql/data
      secrets:
        - db_user_passwd
      networks:
        - cfgsycapi_net
      networks:
        - cfgsycapi_net
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
        interval: 5s
        timeout: 5s
        retries: 5

    cfgsycapi:
      image: angel1707/configserviceapi-api:latest
      restart: always
      deploy:
          replicas: 3
      ports:
        - ${API_PORT}:80
      environment:
        ASPNETCORE_URLS: http://+:80
        CFGSVCAPI_DEBUG: 'false'
        CFGSVCAPI_SECRET_KEY_FILE: /run/secrets/cfgsycapi_secret_key
        CFGSVCAPI_DATABASE_URL_FILE: /run/secrets/database_url
        CFGSVCAPI_TIME_ZONE: "America/Caracas"
      secrets:
        - database_url
        - cfgsycapi_secret_key
      networks:
        - cfgsycapi_net

  volumes:
    postgres_data:
      driver: local
      driver_opts:
        type: nfs
        o: addr=nfssrv01,rw
        device: ":/data/docker-vols/group07/postgres_data"

  networks:
    cfgsycapi_net:
      driver: overlay